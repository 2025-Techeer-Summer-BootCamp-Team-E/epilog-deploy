version: "3.8"

services:
  # MySQL 데이터베이스 서비스 설정
  backend-database:
    image: mysql:8.0
    container_name: backend-mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "23306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 서비스 설정
  backend-redis:
    image: redis:7.0
    container_name: backend-redis
    ports:
      - "26379:6379"
    networks:
      - backend-net

  # Django 애플리케이션 서비스 설정
  backend-django:
    image: ghcr.io/teame/backend-django:1.1.56
    container_name: backend-django
    command: python -m gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/backend
      - ./gcp-key.json:/app/gcp-key.json
    ports:
      - "28000:8000"
    depends_on:
      backend-database:
        condition: service_healthy
      backend-redis:
        condition: service_started
    env_file:
      - ./.env.prod
    environment:
      DJANGO_ENV: prod
      GOOGLE_APPLICATION_CREDENTIALS: /app/gcp-key.json
    networks:
      - backend-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-django.rule=Host(`epi-log.site`, `www.epi-log.site`)"
      - "traefik.http.routers.backend-django.entrypoints=websecure"
      - "traefik.http.routers.backend-django.tls=true"
      - "traefik.http.routers.backend-django.tls.certresolver=letsencrypt"
      - "traefik.http.routers.backend-django.service=backend-django-service"
      - "traefik.http.services.backend-django-service.loadbalancer.server.port=8000"
      - "logging=promtail"
      - "logging_jobname=django-backend"

  # Prometheus 모니터링 서비스 설정
  backend-prometheus:
    image: prom/prometheus:v2.45.6
    container_name: backend-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    labels:
      - "traefik.enable=false"
      - "logging=promtail"
      - "logging_jobname=containerlogs"
    ports:
      - "29090:9090"
    networks:
      - backend-net

  # Grafana 모니터링 서비스 설정
  backend-grafana:
    image: grafana/grafana:10.4.0
    container_name: backend-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_AUTH_ANONYMOUS_ORG_ROLE=${GRAFANA_ROLE}
      - GF_INSTALL_PLUGINS=farski-blendstat-panel
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "23000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.epi-log.site`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "logging=promtail"
      - "logging_jobname=grafana"
    networks:
      - backend-net

  # Traefik 리버스 프록시
  traefik:
    image: traefik:v2.9
    container_name: backend-traefik
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=keep"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--accesslog.fields.headers.names.X-Forwarded-For=keep"

    ports:
      - "80:80"
      - "443:443"
      - "8090:8090"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/letsencrypt
    labels:
      - "logging=promtail"
      - "logging_jobname=traefik"
    networks:
      - backend-net

  # Portainer 컨테이너 관리
  backend-portainer:
    image: portainer/portainer-ce:latest
    container_name: backend-portainer
    ports:
      - "29000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.epi-log.site`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - backend-net

  # Loki 로그 수집
  backend-loki:
    image: grafana/loki:latest
    container_name: backend-loki
    ports:
      - 23100:3100
    command: -config.file=/etc/loki/local-config.yaml
    labels:
      - "traefik.enable=false"
    networks:
      - backend-net

  # Promtail 로그 수집
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - -config.file=/etc/promtail/docker-config.yaml
    labels:
      - "traefik.enable=false"
    depends_on:
      - backend-loki
    networks:
      - backend-net

  # cAdvisor 컨테이너 모니터링
  backend-cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: backend-cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "28080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.epi-log.site`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.http.routers.cadvisor.tls.certresolver=letsencrypt"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "logging=promtail"
      - "logging_jobname=cadvisor"
    networks:
      - backend-net

  # Node Exporter 시스템 모니터링
  backend-node_exporter:
    image: quay.io/prometheus/node-exporter:v1.8.1
    container_name: backend-node_exporter
    ports:
      - "29100:9100"
    command:
      - "--path.rootfs=/host"
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
    networks:
      - backend-net

# Volume 설정
volumes:
  mysql_data:
  grafana_data:
  traefik-certificates:
  portainer_data:

# 네트워크 설정
networks:
  backend-net:
    driver: bridge
